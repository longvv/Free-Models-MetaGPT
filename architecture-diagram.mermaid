flowchart TB
    User[User Input] --> Runner[Run Script]
    
    Runner --> TaskQueue[Task Queue]
    
    subgraph Dispatcher[Smart Dispatcher]
        RateLimiter[Rate Limiter]
        ModelSelector[Model Selector]
        ChunkManager[Chunk Manager]
    end
    
    TaskQueue --> Dispatcher
    
    subgraph OpenRouter[OpenRouter API]
        subgraph ModelRoles[Model Roles]
            LLM1[deepseek-r1-distill-llama-70b\nRequirements Analysis]
            LLM2[Mistral 7B\nSystem Design]
            LLM3[deepseek-r1-distill-llama-70b\nImplementation Planning]
            LLM4[olympiccoder-32b\nCode Generation]
            LLM5[olympiccoder-32b\nCode Review]
        end
        
        subgraph BackupModels[Backup Models]
            BLLM1[Mistral 7B\nBackup for Requirements]
            BLLM2[deepseek-r1-distill-llama-70b\nBackup for Design]
            BLLM3[Phi-3-medium-128k\nBackup for Planning]
            BLLM4[WizardLM 2 8x22b\nBackup for Code Gen]
            BLLM5[Mistral 7B\nBackup for Review]
        end
    end
    
    Dispatcher --> ModelRoles
    Dispatcher -.-> BackupModels
    
    subgraph ContextManager[Enhanced Memory System]
        VectorDB[(Vector Store)]
        ResultCache[Result Cache]
        WindowManager[Context Window Manager]
    end
    
    subgraph Validators[Validation System]
        SyntaxCheck[Syntax Validator]
        ConsistencyCheck[Consistency Validator]
        SchemaCheck[Schema Validator]
    end
    
    ContextManager <--> Dispatcher
    ModelRoles --> ResultProcessor[Result Processor]
    BackupModels --> ResultProcessor
    ResultProcessor --> Validators
    Validators --> ResultProcessor
    ResultProcessor --> ContextManager
    
    ResultProcessor --> Workspace[(Workspace Directory)]
    
    Workspace --> MetaGPT[MetaGPT Integration]
    
    class LLM1,LLM2,LLM3,LLM4,LLM5,BLLM1,BLLM2,BLLM3,BLLM4,BLLM5 freeModel;
    classDef freeModel fill:#f9f,stroke:#333,stroke-width:2px;